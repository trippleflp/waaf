package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"
	"fmt"
	"github.com/imroc/req/v3"
	"gitlab.informatik.hs-augsburg.de/flomon/waaf/services/api-gateway/auth"
)

// ListEntitledGroups is the resolver for the listEntitledGroups field.
func (r *queryResolver) ListEntitledGroups(ctx context.Context) (string, error) {
	userId := auth.UserId(ctx)
	if userId == nil {
		return "", fmt.Errorf("no valid authtoken was provided")
	}

	resp, err := req.R().
		SetBody(struct {
			id string `json:"userId"`
		}{*userId}).
		Post("http://localhost:10001/list")

	if err != nil {
		return "", err
	}
	if resp.IsError() {
		return "", fmt.Errorf("%s", resp.String())
	}
	if resp.IsSuccess() {
		return "", nil
	}
	return "", fmt.Errorf("got unexpected response, raw dump:\n%s", resp.Dump())
}
