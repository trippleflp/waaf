input FunctionGroupInput {
    name: String
    id: ID
}

input createFunctionGroupInput {
    groupName: String!, allowedFunctionGroups: [FunctionGroupInput]
}
enum UserRole {
    ADMIN,
    USER,
    READER,
    DEVELOPER,
}

input userRolePairInput{
    userId: ID!, , role: UserRole!
}

extend type Query {
    listEntitledGroups: [FunctionGroup]
    getFunctionGroup(functionGroupID: String!): FunctionGroup!
}

extend type Mutation {
    createFunctionGroup(input: createFunctionGroupInput!): FunctionGroup
    addUserToFunctionGroup(users:[userRolePairInput!]!, functionGroupId:ID!): FunctionGroup
    removeUserFromFunctionGroup(userIds:[String!]!, functionGroupId:ID!): FunctionGroup
    editUserRole(data: userRolePairInput): FunctionGroup
}
